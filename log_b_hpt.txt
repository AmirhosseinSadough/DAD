/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/scipy/spatial/distance.py:1300: RuntimeWarning: invalid value encountered in sqrt
  return np.sqrt(js / 2.0)
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (128) is greater than the total number of samples (48). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (48). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (48). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (48). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (80). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (144). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (144). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (144). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (240). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (128) is greater than the total number of samples (77). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (77). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (77). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (77). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (129). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (128). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (128). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (128). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (214). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (133). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (133). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (133). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (223). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (128) is greater than the total number of samples (117). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (117). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (117). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (117). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (128) is greater than the total number of samples (118). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (256) is greater than the total number of samples (118). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (118). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (118). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (198). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (409). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (409). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (512) is greater than the total number of samples (460). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (460). max_samples will be set to n_samples for estimation.
  warn(
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/amirhossein_sadough/miniconda3/envs/my_env/lib/python3.8/site-packages/sklearn/ensemble/_iforest.py:289: UserWarning: max_samples (1024) is greater than the total number of samples (890). max_samples will be set to n_samples for estimation.
  warn(
Device:  cpu
False
______hepatitis.npz______train_______
dataset_down_contamination {0.1: 0.037500000000000006, 0.2: 0.037500000000000006, 0.3: 0.0875, 0.4: 0.056249999999999994, 0.5: 0.0625, 0.6: 0.037500000000000006}
histogram_distances {0.1: 0.40794947238952, 0.2: nan, 0.3: nan, 0.4: nan, 0.5: 0.1054991279494556, 0.6: nan}
Best downsample rate: 0.5
Contamination rate difference: 0.0625
Histogram distance: 0.1054991279494556
Best downsample rate: 0.5
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7896825396825397
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6984126984126984
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7341269841269841
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7777777777777778
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7857142857142857
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8015873015873015
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7896825396825397
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5436507936507936
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for hepatitis.npz is {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6706349206349206
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.3571428571428571
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8174603174603174
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.3333333333333333
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8174603174603174
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.3134920634920635
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8373015873015872
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.2579365079365079
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8412698412698413
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8214285714285714
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8154761904761905
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.253968253968254
save: DECODE_s Best hyperparameters for hepatitis.npz is {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.3412698412698413
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.18253968253968256
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.21825396825396823
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.17857142857142858
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.18055555555555555
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.30952380952380953
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.29563492063492064
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.25595238095238093
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.2400793650793651
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.2043650793650794
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.26388888888888884
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.17261904761904767
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.128968253968254
save: GMM Best hyperparameters for hepatitis.npz is {'n_components': 2}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.623015873015873
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.8214285714285714
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.8452380952380953
save: COF Best hyperparameters for hepatitis.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.8412698412698414
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.8452380952380951
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.8452380952380951
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.8531746031746033
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.8492063492063493
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.8531746031746033
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.8531746031746033
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.8611111111111112
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.8650793650793651
save: kNN Best hyperparameters for hepatitis.npz is {'method': 'mean', 'n_neighbors': 29}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.8452380952380951
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.8531746031746031
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.871031746031746
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.861111111111111
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.8571428571428571
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.8650793650793651
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.876984126984127
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.853174603174603
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.8412698412698413
save: kth-NN Best hyperparameters for hepatitis.npz is {'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.7261904761904763
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.7341269841269842
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.7301587301587302
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.746031746031746
save: IF Best hyperparameters for hepatitis.npz is {'max_samples': 1024, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.7777777777777778
save: ensemble-LOF Best hyperparameters for hepatitis.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.7182539682539683
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.7976190476190476
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.8531746031746033
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.8650793650793651
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.8690476190476191
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.873015873015873
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.873015873015873
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.8690476190476191
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.8611111111111112
save: LOF Best hyperparameters for hepatitis.npz is {'n_neighbors': 20}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.6944444444444444
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.7579365079365079
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.8134920634920635
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.8253968253968255
save: MCD Best hyperparameters for hepatitis.npz is {'assume_centered': True, 'support_fraction': 0.9}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.8055555555555556
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.8055555555555556
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.8333333333333335
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.8452380952380951
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.8492063492063491
save: OCSVM Best hyperparameters for hepatitis.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.8571428571428572
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.8134920634920635
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.8134920634920635
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.8134920634920635
save: PCA Best hyperparameters for hepatitis.npz is {'n_components': 0.3}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.7023809523809524
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.6904761904761905
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.6547619047619048
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.6468253968253967
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.6547619047619048
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.6984126984126984
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.7103174603174602
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.6150793650793651
save: SOD Best hyperparameters for hepatitis.npz is {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.7579365079365079
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.7579365079365079
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.7738095238095237
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.7817460317460319
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.7936507936507937
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.7976190476190477
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.8134920634920635
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.8134920634920635
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.8293650793650794
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.8333333333333333
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.8214285714285714
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.8055555555555556
save: EIF Best hyperparameters for hepatitis.npz is {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.5753968253968254
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.6408730158730158
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.746031746031746
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.7896825396825397
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.8273809523809524
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.8571428571428572
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.8551587301587301
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.8690476190476191
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.873015873015873
save: ODIN Best hyperparameters for hepatitis.npz is {'n_neighbors': 29}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.6071428571428572
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.6507936507936508
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.7698412698412698
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.8055555555555556
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.5873015873015873
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.6825396825396826
save: LUNAR Best hyperparameters for hepatitis.npz is {'n_neighbours': 20}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.7857142857142858
save: DynamicHBOS Best hyperparameters for hepatitis.npz is {}
load again: DynamicHBOS Best hyperparameters for hepatitis.npz is {}
______hepatitis.npz______test_______
-DECODE
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 2}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 29}
-kth-NN
{'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 1024, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 20}
-MCD
{'assume_centered': True, 'support_fraction': 0.9}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
-SOD
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
-EIF
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 29}
-LUNAR
{'n_neighbours': 20}
-DynamicHBOS
{
}
______vertebral.npz______train_______
dataset_down_contamination {0.1: 0.0, 0.2: 0.0, 0.3: 0.0, 0.4: 0.0, 0.5: 0.0, 0.6: 0.0}
histogram_distances {0.1: 0.51663754268128, 0.2: 0.38520829667553297, 0.3: 0.3808702993458759, 0.4: 0.18578031147959817, 0.5: 0.2851610730836515, 0.6: 0.07860287734366982}
Best downsample rate: 0.6
Contamination rate difference: 0.0
Histogram distance: 0.07860287734366982
Best downsample rate: 0.6
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.2623456790123457
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.33994708994709
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.1556437389770723
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4175485008818342
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.544973544973545
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7447089947089947
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7795414462081128
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7905643738977073
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.781305114638448
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7222222222222222
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for vertebral.npz is {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.07539682539682539
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.2142857142857143
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.3170194003527337
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.09038800705467373
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.17195767195767198
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.1869488536155203
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4629629629629629
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.2579365079365079
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.607583774250441
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.3350970017636684
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7120811287477955
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.3800705467372134
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.732363315696649
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.3447971781305115
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7319223985890653
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.26587301587301587
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5815696649029982
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.17901234567901236
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.0
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.0
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.0
save: DECODE_s Best hyperparameters for vertebral.npz is {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.4219576719576719
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.2962962962962963
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.3112874779541446
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.40388007054673725
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.3853615520282187
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.43386243386243384
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.326278659611993
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.435626102292769
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.3315696649029982
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.5546737213403881
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.39462081128747795
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.43253968253968256
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.6027336860670194
save: GMM Best hyperparameters for vertebral.npz is {'n_components': 14}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.5396825396825397
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.49823633156966496
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.45546737213403876
save: COF Best hyperparameters for vertebral.npz is {'n_neighbors': 10}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.40343915343915343
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.41534391534391535
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.4104938271604939
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.4052028218694885
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.3937389770723104
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.38580246913580246
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.3800705467372134
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.3787477954144621
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.376984126984127
save: kNN Best hyperparameters for vertebral.npz is {'method': 'mean', 'n_neighbors': 8}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.44466490299823636
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.4305555555555556
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.38955026455026454
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.3869047619047619
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.3604497354497354
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.3544973544973545
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.36331569664903
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.3844797178130511
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.36596119929453264
save: kth-NN Best hyperparameters for vertebral.npz is {'method': 'largest', 'n_neighbors': 5}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.38095238095238093
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.3831569664902998
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.3738977072310406
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.37742504409171074
save: IF Best hyperparameters for vertebral.npz is {'max_samples': 256, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.47707231040564374
save: ensemble-LOF Best hyperparameters for vertebral.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.5908289241622575
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.564373897707231
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.5158730158730158
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.466931216931217
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.4241622574955908
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.38932980599647266
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.36111111111111105
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.34347442680776014
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.3170194003527336
save: LOF Best hyperparameters for vertebral.npz is {'n_neighbors': 5}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.41402116402116407
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.4320987654320988
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.4131393298059965
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.4157848324514991
save: MCD Best hyperparameters for vertebral.npz is {'assume_centered': True, 'support_fraction': 0.7}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.42151675485008816
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.39638447971781304
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.3756613756613757
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.36772486772486773
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.34832451499118167
save: OCSVM Best hyperparameters for vertebral.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.5110229276895943
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.5110229276895943
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.4492945326278659
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.3963844797178131
save: PCA Best hyperparameters for vertebral.npz is {'n_components': 0.3}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.5511463844797178
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.4616402116402116
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.4325396825396825
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.4678130511463845
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.5119047619047619
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.5004409171075838
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.4338624338624339
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.5171957671957672
save: SOD Best hyperparameters for vertebral.npz is {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.36596119929453264
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.3743386243386243
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.3747795414462081
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.37169312169312174
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.3699294532627866
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.36596119929453264
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.3646384479717813
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.36816578483245155
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.3641975308641976
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.36860670194003525
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.3765432098765432
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.36287477954144626
save: EIF Best hyperparameters for vertebral.npz is {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.593915343915344
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.6055996472663139
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.5967813051146384
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.5498236331569665
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.5171957671957672
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.48897707231040566
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.4801587301587302
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.46318342151675485
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.4409171075837742
save: ODIN Best hyperparameters for vertebral.npz is {'n_neighbors': 8}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.4858906525573192
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.43298059964726626
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.4131393298059965
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.49647266313932975
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.38756613756613756
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.4285714285714286
save: LUNAR Best hyperparameters for vertebral.npz is {'n_neighbours': 20}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.2914462081128748
save: DynamicHBOS Best hyperparameters for vertebral.npz is {}
load again: DynamicHBOS Best hyperparameters for vertebral.npz is {}
______vertebral.npz______test_______
-DECODE
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 14}
-COF
{'n_neighbors': 10}
-kNN
{'method': 'mean', 'n_neighbors': 8}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
-IF
{'max_samples': 256, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 5}
-MCD
{'assume_centered': True, 'support_fraction': 0.7}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
-PCA
{'n_components': 0.3}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
-EIF
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 8}
-LUNAR
{'n_neighbours': 20}
-DynamicHBOS
{
}
______wine.npz______train_______
dataset_down_contamination {0.1: 0.0058139534883720895, 0.2: 0.0024806201550387624, 0.3: 0.001427988576091388, 0.4: 0.0009119927040583675, 0.5: 0.0006056201550387608, 0.6: 0.00040269807711668104}
histogram_distances {0.1: 0.5167107901856277, 0.2: 0.40545692185647997, 0.3: 0.2980239432046012, 0.4: 0.2598444059336347, 0.5: 0.24267220012298088, 0.6: 0.18662614257786073}
Best downsample rate: 0.6
Contamination rate difference: 0.00040269807711668104
Histogram distance: 0.18662614257786073
Best downsample rate: 0.6
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7746478873239436
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9413145539906104
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.880281690140845
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6220657276995305
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5492957746478874
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.49765258215962443
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5093896713615024
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.22535211267605632
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.35915492957746475
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for wine.npz is {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.11971830985915491
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9694835680751174
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.915492957746479
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.823943661971831
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7981220657276995
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.784037558685446
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7746478873239437
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.30046948356807507
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
save: DECODE_s Best hyperparameters for wine.npz is {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.755868544600939
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.7276995305164319
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.0
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.0
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.014084507042253502
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.11267605633802813
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.05633802816901412
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.07042253521126762
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.07042253521126762
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.14084507042253525
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.12676056338028174
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.19718309859154926
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.2816901408450704
save: GMM Best hyperparameters for wine.npz is {'n_components': 2}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.5093896713615024
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.8568075117370892
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.9154929577464789
save: COF Best hyperparameters for wine.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.7370892018779343
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.8967136150234741
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.9248826291079811
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.9366197183098591
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.9389671361502347
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.9413145539906104
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.9436619718309859
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.9460093896713615
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.9460093896713615
save: kNN Best hyperparameters for wine.npz is {'method': 'mean', 'n_neighbors': 26}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.8286384976525822
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.9483568075117371
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.9577464788732394
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.960093896713615
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.9577464788732394
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.960093896713615
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.9600938967136151
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.960093896713615
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.9553990610328638
save: kth-NN Best hyperparameters for wine.npz is {'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.892018779342723
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.8967136150234742
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.892018779342723
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.8943661971830986
save: IF Best hyperparameters for wine.npz is {'max_samples': 256, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.9319248826291079
save: ensemble-LOF Best hyperparameters for wine.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.3215962441314554
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.8943661971830985
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.9389671361502347
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.9413145539906104
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.9507042253521126
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.9530516431924883
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.9553990610328639
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.9553990610328639
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.9553990610328639
save: LOF Best hyperparameters for wine.npz is {'n_neighbors': 23}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.9577464788732395
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.9553990610328639
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.9671361502347418
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.7323943661971831
save: MCD Best hyperparameters for wine.npz is {'assume_centered': True, 'support_fraction': 0.8}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.8967136150234741
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.9225352112676056
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.9342723004694836
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.9342723004694836
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.9413145539906104
save: OCSVM Best hyperparameters for wine.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.9272300469483568
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.8849765258215961
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.9272300469483569
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.9178403755868545
save: PCA Best hyperparameters for wine.npz is {'n_components': 0.7}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.6291079812206573
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.9107981220657277
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.6408450704225352
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.908450704225352
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.6807511737089202
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.8427230046948356
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.7605633802816901
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.92018779342723
save: SOD Best hyperparameters for wine.npz is {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9131455399061033
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9061032863849765
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9131455399061033
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9178403755868544
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9295774647887325
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9272300469483568
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9295774647887325
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9319248826291079
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9342723004694836
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.931924882629108
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.931924882629108
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9295774647887325
save: EIF Best hyperparameters for wine.npz is {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.46478873239436624
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.6713615023474179
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.8427230046948357
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.8779342723004695
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.8990610328638498
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.9131455399061034
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.9284037558685446
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.9389671361502346
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.9401408450704225
save: ODIN Best hyperparameters for wine.npz is {'n_neighbors': 29}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.30281690140845074
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.4812206572769953
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.9319248826291079
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.9014084507042253
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.8779342723004695
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.48826291079812206
save: LUNAR Best hyperparameters for wine.npz is {'n_neighbours': 15}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.9671361502347418
save: DynamicHBOS Best hyperparameters for wine.npz is {}
load again: DynamicHBOS Best hyperparameters for wine.npz is {}
______wine.npz______test_______
-DECODE
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 26}
-kth-NN
{'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 256, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 23}
-MCD
{'assume_centered': True, 'support_fraction': 0.8}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.7}
-SOD
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 29}
-LUNAR
{'n_neighbours': 15}
-DynamicHBOS
{
}
______glass.npz______train_______
dataset_down_contamination {0.1: 0.0055629728526924785, 0.2: 0.0055629728526924785, 0.3: 0.010806074766355138, 0.4: 0.006761957119296315, 0.5: 0.004672897196261683, 0.6: 0.004818925233644862}
histogram_distances {0.1: 0.4805469014706624, 0.2: 0.3279505779144577, 0.3: 0.30022416345656877, 0.4: 0.23712194804246187, 0.5: 0.146182784259514, 0.6: 0.15064963162519962}
Best downsample rate: 0.5
Contamination rate difference: 0.004672897196261683
Histogram distance: 0.146182784259514
Best downsample rate: 0.5
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.07377049180327871
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8715846994535519
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8114754098360656
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8060109289617485
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8005464480874316
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8032786885245902
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8060109289617485
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8032786885245902
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7841530054644809
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for glass.npz is {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.1557377049180328
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.07377049180327871
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9467213114754098
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.7486338797814208
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8825136612021858
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6775956284153005
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.8989071038251366
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.703551912568306
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9057377049180327
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6721311475409836
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9084699453551912
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6106557377049181
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9098360655737705
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5655737704918032
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9112021857923497
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.48770491803278687
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.894808743169399
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.42896174863387976
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.139344262295082
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.139344262295082
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.139344262295082
save: DECODE_s Best hyperparameters for glass.npz is {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.5696721311475409
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.7103825136612022
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.605191256830601
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.8183060109289618
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.7827868852459016
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.8428961748633881
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.6407103825136612
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.674863387978142
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.5826502732240437
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.6837431693989071
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.6366120218579235
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.38456284153005466
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.10245901639344265
save: GMM Best hyperparameters for glass.npz is {'n_components': 7}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.7336065573770492
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.7595628415300546
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.7950819672131147
save: COF Best hyperparameters for glass.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.7950819672131147
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.8073770491803278
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.8005464480874317
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.7841530054644807
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.7691256830601092
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.7595628415300546
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.755464480874317
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.7459016393442622
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.7431693989071038
save: kNN Best hyperparameters for glass.npz is {'method': 'mean', 'n_neighbors': 8}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.8060109289617485
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.8155737704918032
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.7745901639344261
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.7377049180327869
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.7213114754098361
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.7117486338797814
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.6939890710382515
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.6939890710382512
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.6939890710382514
save: kth-NN Best hyperparameters for glass.npz is {'method': 'largest', 'n_neighbors': 8}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.6666666666666667
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6653005464480874
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6639344262295082
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.6680327868852459
save: IF Best hyperparameters for glass.npz is {'max_samples': 1024, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.6475409836065573
save: ensemble-LOF Best hyperparameters for glass.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.6270491803278688
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.7472677595628415
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.7404371584699454
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.703551912568306
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.6980874316939891
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.6680327868852459
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.7035519125683061
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.7336065573770492
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.7185792349726776
save: LOF Best hyperparameters for glass.npz is {'n_neighbors': 8}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.7882513661202186
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.7240437158469946
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.7254098360655737
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.7431693989071039
save: MCD Best hyperparameters for glass.npz is {'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.45628415300546443
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.5969945355191257
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.6325136612021858
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.662568306010929
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.6734972677595629
save: OCSVM Best hyperparameters for glass.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.3866120218579235
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.43989071038251365
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.4672131147540984
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.5846994535519126
save: PCA Best hyperparameters for glass.npz is {'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.7404371584699454
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.8155737704918032
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.6338797814207651
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.8346994535519126
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.8169398907103826
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.8142076502732241
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.6844262295081968
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.7677595628415301
save: SOD Best hyperparameters for glass.npz is {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.6516393442622951
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6557377049180328
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6530054644808743
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.657103825136612
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.6516393442622951
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6502732240437159
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6612021857923498
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.6666666666666666
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.6598360655737705
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6530054644808743
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6598360655737705
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.6653005464480874
save: EIF Best hyperparameters for glass.npz is {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.5396174863387978
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.6489071038251366
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.6065573770491803
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.3244535519125683
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.31284153005464477
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.39549180327868855
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.46584699453551914
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.4918032786885246
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.5102459016393442
save: ODIN Best hyperparameters for glass.npz is {'n_neighbors': 8}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.7868852459016393
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.7800546448087432
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.7745901639344261
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.7486338797814207
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.7295081967213115
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.7950819672131147
save: LUNAR Best hyperparameters for glass.npz is {'n_neighbours': 30}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.5778688524590163
save: DynamicHBOS Best hyperparameters for glass.npz is {}
load again: DynamicHBOS Best hyperparameters for glass.npz is {}
______glass.npz______test_______
-DECODE
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 7}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 8}
-kth-NN
{'method': 'largest', 'n_neighbors': 8}
-IF
{'max_samples': 1024, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 8}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 8}
-LUNAR
{'n_neighbours': 30}
-DynamicHBOS
{
}
______wbc2.npz______train_______
dataset_down_contamination {0.1: 0.0006114961271911981, 0.2: 0.0006114961271911981, 0.3: 0.0006114961271911981, 0.4: 0.00010077089736484218, 0.5: 0.00020199571769078523, 0.6: 0.00026973262753295785}
histogram_distances {0.1: 0.364186984309708, 0.2: 0.23059251607950115, 0.3: 0.2510802482800798, 0.4: 0.20806476172394633, 0.5: 0.0792572400134136, 0.6: 0.18129079371436055}
Best downsample rate: 0.5
Contamination rate difference: 0.00020199571769078523
Histogram distance: 0.0792572400134136
Best downsample rate: 0.5
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6666666666666666
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9724409448818897
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 1.0
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9908136482939633
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9816272965879265
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9422572178477691
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9291338582677164
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9199475065616798
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9002624671916011
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4566929133858268
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for wbc2.npz is {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6666666666666666
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.75
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.75
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.8333333333333333
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9868766404199475
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9934383202099738
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9868766404199475
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9409448818897639
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9173228346456692
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9002624671916011
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.9015748031496064
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6404199475065616
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.19685039370078738
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 1.0
save: DECODE_s Best hyperparameters for wbc2.npz is {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.9238845144356956
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.1364829396325459
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.47506561679790027
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.023622047244094464
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.11548556430446193
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.0656167979002625
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.03937007874015751
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.2335958005249344
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.03674540682414701
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.030839895013123363
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.059711286089238876
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.053149606299212615
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.04265091863517063
save: GMM Best hyperparameters for wbc2.npz is {'n_components': 2}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.5078740157480315
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.8254593175853018
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.9356955380577427
save: COF Best hyperparameters for wbc2.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.9803149606299213
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.9829396325459319
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.9855643044619423
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.9921259842519685
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.9947506561679791
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.9947506561679791
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.9947506561679791
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.9947506561679791
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.9947506561679791
save: kNN Best hyperparameters for wbc2.npz is {'method': 'mean', 'n_neighbors': 17}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.9750656167979002
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.9868766404199475
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.994750656167979
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.9934383202099737
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.9960629921259841
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.9960629921259841
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.9960629921259844
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.9960629921259843
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.9960629921259843
save: kth-NN Best hyperparameters for wbc2.npz is {'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9921259842519685
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9921259842519685
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9921259842519685
save: IF Best hyperparameters for wbc2.npz is {'max_samples': 512, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.9514435695538058
save: ensemble-LOF Best hyperparameters for wbc2.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.3425196850393701
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.44619422572178474
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.6023622047244095
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.7664041994750656
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.8359580052493438
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.8910761154855643
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.916010498687664
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.9343832020997375
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.9527559055118111
save: LOF Best hyperparameters for wbc2.npz is {'n_neighbors': 29}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.9803149606299213
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.984251968503937
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.9934383202099738
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.9868766404199475
save: MCD Best hyperparameters for wbc2.npz is {'assume_centered': True, 'support_fraction': 0.8}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.9868766404199476
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.9868766404199476
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.9868766404199476
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.9868766404199476
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.9868766404199476
save: OCSVM Best hyperparameters for wbc2.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.9816272965879265
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.9816272965879265
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.9868766404199475
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.9881889763779528
save: PCA Best hyperparameters for wbc2.npz is {'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.9343832020997376
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.9343832020997376
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.926509186351706
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.9698162729658794
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.9251968503937007
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.9094488188976378
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.8963254593175853
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.9632545931758529
save: SOD Best hyperparameters for wbc2.npz is {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9947506561679791
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9921259842519685
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099737
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9947506561679791
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9934383202099738
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9947506561679791
save: EIF Best hyperparameters for wbc2.npz is {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.589238845144357
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.7178477690288715
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.7578740157480315
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.8503937007874015
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.8792650918635171
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.9009186351706037
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.9166666666666667
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.9291338582677166
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.9304461942257217
save: ODIN Best hyperparameters for wbc2.npz is {'n_neighbors': 29}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.9908136482939632
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.9606299212598425
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.979002624671916
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.9855643044619422
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.984251968503937
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.9803149606299213
save: LUNAR Best hyperparameters for wbc2.npz is {'n_neighbours': 5}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.9895013123359581
save: DynamicHBOS Best hyperparameters for wbc2.npz is {}
load again: DynamicHBOS Best hyperparameters for wbc2.npz is {}
______wbc2.npz______test_______
-DECODE
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 17}
-kth-NN
{'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 512, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 29}
-MCD
{'assume_centered': True, 'support_fraction': 0.8}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
-PCA
{'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 29}
-LUNAR
{'n_neighbours': 5}
-DynamicHBOS
{
}
______parkinson.npz______train_______
dataset_down_contamination {0.1: 0.12226720647773281, 0.2: 0.01025641025641022, 0.3: 0.012466843501326208, 0.4: 0.023076923076923106, 0.5: 0.0012688342585249757, 0.6: 0.0017094017094017033}
histogram_distances {0.1: 0.3778399412177295, 0.2: 0.24670929056244065, 0.3: 0.195972528508561, 0.4: 0.1437127008241094, 0.5: 0.1481253228089211, 0.6: 0.1342279235815365}
Best downsample rate: 0.6
Contamination rate difference: 0.0017094017094017033
Histogram distance: 0.1342279235815365
Best downsample rate: 0.6
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5877742946708465
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5113636363636364
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.505485893416928
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4286833855799373
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4318181818181818
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.43534482758620685
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.44357366771159873
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5525078369905956
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5303683385579937
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for parkinson.npz is {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6344043887147336
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.731974921630094
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6504702194357367
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6747648902821317
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7080721003134796
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6712382445141065
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5862068965517242
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6018808777429467
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5721003134796239
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5415360501567398
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.536833855799373
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.48432601880877746
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5325235109717867
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.4823667711598746
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5650470219435737
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.52782131661442
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5579937304075234
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5188087774294671
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5995297805642633
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5995297805642633
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5995297805642633
save: DECODE_s Best hyperparameters for parkinson.npz is {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.4498432601880878
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.6359717868338557
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.6257836990595611
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.6626175548589341
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.47844827586206895
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.695141065830721
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.5242946708463949
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.5807210031347961
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.49294670846394983
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.2825235109717868
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.37264890282131663
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.3942006269592477
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.3013322884012539
save: GMM Best hyperparameters for parkinson.npz is {'n_components': 7}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.5650470219435737
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.5740595611285266
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.5963949843260189
save: COF Best hyperparameters for parkinson.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.6814263322884013
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.646551724137931
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.6187304075235109
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.6042319749216302
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.5960031347962382
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.5897335423197492
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.5803291536050157
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.5717084639498433
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.5677899686520377
save: kNN Best hyperparameters for parkinson.npz is {'method': 'mean', 'n_neighbors': 5}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.5971786833855799
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.5626959247648903
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.5662225705329154
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.5548589341692791
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.5597570532915361
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.5560344827586207
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.5525078369905956
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.5387931034482759
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.5325235109717869
save: kth-NN Best hyperparameters for parkinson.npz is {'method': 'largest', 'n_neighbors': 5}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5141065830721003
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.5003918495297806
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.4905956112852665
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.5129310344827587
save: IF Best hyperparameters for parkinson.npz is {'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.49568965517241376
save: ensemble-LOF Best hyperparameters for parkinson.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.5850313479623824
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.484717868338558
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.43926332288401254
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.4584639498432602
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.4862852664576803
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.49568965517241376
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.4890282131661442
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.49960815047021945
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.502742946708464
save: LOF Best hyperparameters for parkinson.npz is {'n_neighbors': 5}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.6931818181818181
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.6469435736677116
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.6265673981191221
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.5489811912225705
save: MCD Best hyperparameters for parkinson.npz is {'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.43377742946708464
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.43769592476489033
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.4478840125391849
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.45141065830721006
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.4666927899686521
save: OCSVM Best hyperparameters for parkinson.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.26724137931034486
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.26724137931034486
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.3714733542319749
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.3420846394984326
save: PCA Best hyperparameters for parkinson.npz is {'n_components': 0.7}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.6614420062695925
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.7025862068965518
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.6963166144200627
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.7343260188087773
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.6630094043887147
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.6959247648902821
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.7041536050156739
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.7449059561128526
save: SOD Best hyperparameters for parkinson.npz is {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5195924764890282
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.518025078369906
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.5203761755485893
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.5403605015673981
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5309561128526645
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.545062695924765
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.5297805642633229
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.5352664576802508
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5466300940438871
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.5348746081504703
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.5293887147335423
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.5184169278996865
save: EIF Best hyperparameters for parkinson.npz is {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.4286833855799373
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.3893025078369906
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.3851880877742947
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.3849921630094044
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.36912225705329155
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.3836206896551724
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.36363636363636365
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.3644200626959248
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.3661833855799373
save: ODIN Best hyperparameters for parkinson.npz is {'n_neighbors': 5}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.5387931034482759
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.4400470219435737
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.5293887147335423
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.45532915360501564
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.436128526645768
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.4079153605015674
save: LUNAR Best hyperparameters for parkinson.npz is {'n_neighbours': 5}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.6900470219435736
save: DynamicHBOS Best hyperparameters for parkinson.npz is {}
load again: DynamicHBOS Best hyperparameters for parkinson.npz is {}
______parkinson.npz______test_______
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 7}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
-IF
{'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 5}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.7}
-SOD
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
-LUNAR
{'n_neighbours': 5}
-DynamicHBOS
{
}
______wpbc.npz______train_______
dataset_down_contamination {0.1: 0.026847421584263703, 0.2: 0.07031857031857033, 0.3: 0.033812703304228725, 0.4: 0.034842091804117126, 0.5: 0.04545454545454547, 0.6: 0.05093305940763568}
histogram_distances {0.1: 0.43009939160874233, 0.2: 0.34345720815994285, 0.3: 0.254279938676708, 0.4: 0.1994514958916183, 0.5: 0.17186705361031865, 0.6: 0.1265138878238241}
Best downsample rate: 0.6
Contamination rate difference: 0.05093305940763568
Histogram distance: 0.1265138878238241
Best downsample rate: 0.6
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.48058712121212116
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4744318181818182
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.46306818181818177
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4398674242424242
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4289772727272727
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4303977272727273
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.43892045454545453
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4398674242424242
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.47395833333333326
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for wpbc.npz is {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5383522727272727
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.45833333333333337
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5123106060606061
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.45265151515151514
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5194128787878788
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.41382575757575757
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5426136363636364
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4195075757575758
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5714962121212122
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4223484848484848
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5909090909090909
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.421875
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5700757575757576
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.37192234848484845
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5757575757575757
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4791666666666667
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.587594696969697
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6003787878787878
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6003787878787878
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6003787878787878
save: DECODE_s Best hyperparameters for wpbc.npz is {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.5653409090909091
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.5785984848484848
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.3162878787878788
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.46874999999999994
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.5184659090909092
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.39015151515151514
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.42945075757575757
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.3162878787878788
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.5416666666666666
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.42613636363636365
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.3678977272727273
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.34446022727272724
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.4786931818181819
save: GMM Best hyperparameters for wpbc.npz is {'n_components': 3}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.521780303030303
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.621685606060606
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.6486742424242424
save: COF Best hyperparameters for wpbc.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.6122159090909091
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.6178977272727273
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.6259469696969697
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.6268939393939394
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.6264204545454546
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.6259469696969697
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.6268939393939394
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.6231060606060607
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.6235795454545454
save: kNN Best hyperparameters for wpbc.npz is {'method': 'mean', 'n_neighbors': 14}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.6297348484848484
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.6221590909090908
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.6304450757575757
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.623342803030303
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.6228693181818181
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.6190814393939394
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.6164772727272727
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.6098484848484849
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.6119791666666666
save: kth-NN Best hyperparameters for wpbc.npz is {'method': 'largest', 'n_neighbors': 11}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5321969696969697
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.5208333333333333
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.5265151515151516
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.5525568181818182
save: IF Best hyperparameters for wpbc.npz is {'max_samples': 1024, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.6141098484848485
save: ensemble-LOF Best hyperparameters for wpbc.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.48532196969696967
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.5610795454545454
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.5951704545454546
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.6084280303030303
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.6183712121212122
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.6245265151515151
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.6287878787878788
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.6292613636363636
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.6278409090909092
save: LOF Best hyperparameters for wpbc.npz is {'n_neighbors': 26}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.5771780303030303
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.5629734848484849
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.5681818181818181
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.5653409090909091
save: MCD Best hyperparameters for wpbc.npz is {'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.546875
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.5525568181818181
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.5662878787878788
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.5752840909090909
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.5894886363636365
save: OCSVM Best hyperparameters for wpbc.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.484375
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.484375
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.5099431818181819
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.5160984848484849
save: PCA Best hyperparameters for wpbc.npz is {'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.5392992424242424
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.5748106060606061
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.4805871212121212
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.5099431818181818
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.5478219696969697
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.5336174242424243
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.4853219696969697
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.5241477272727273
save: SOD Best hyperparameters for wpbc.npz is {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5572916666666667
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.5653409090909091
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.5648674242424243
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.5658143939393939
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5752840909090909
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.5880681818181819
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.5809659090909092
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.587594696969697
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.5961174242424243
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.5866477272727273
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.59375
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.5885416666666666
save: EIF Best hyperparameters for wpbc.npz is {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.46638257575757575
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.5433238636363636
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.5385890151515151
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.5350378787878788
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.5397727272727272
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.5561079545454545
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.5722064393939393
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.5714962121212122
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.5864109848484849
save: ODIN Best hyperparameters for wpbc.npz is {'n_neighbors': 29}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.6145833333333334
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.5989583333333333
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.5861742424242424
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.609375
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.5511363636363636
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.6193181818181819
save: LUNAR Best hyperparameters for wpbc.npz is {'n_neighbours': 30}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.5497159090909091
save: DynamicHBOS Best hyperparameters for wpbc.npz is {}
load again: DynamicHBOS Best hyperparameters for wpbc.npz is {}
______wpbc.npz______test_______
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 3}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 14}
-kth-NN
{'method': 'largest', 'n_neighbors': 11}
-IF
{'max_samples': 1024, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 26}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
-EIF
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 29}
-LUNAR
{'n_neighbours': 30}
-DynamicHBOS
{
}
______breastw.npz______train_______
dataset_down_contamination {0.1: 0.04713202997157867, 0.2: 0.03375032296959779, 0.3: 0.011691499440185993, 0.4: 0.016373572742533204, 0.5: 0.00975084047865421, 0.6: 0.03149129935170236}
histogram_distances {0.1: 0.11381583846363852, 0.2: 0.07988369504605747, 0.3: 0.06611155914398192, 0.4: 0.04974331764487597, 0.5: 0.037194170743279645, 0.6: 0.035846891395416663}
Best downsample rate: 0.6
Contamination rate difference: 0.03149129935170236
Histogram distance: 0.035846891395416663
Best downsample rate: 0.6
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6741917502787068
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7111077328468633
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7245616702138441
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6779416235937975
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6227323401236444
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5726664639708119
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5364345799128407
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5075757575757576
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4963514746123442
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.46241258741258745
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.37820512820512825
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for breastw.npz is {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6819702037093343
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6552650248302422
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7128306476132563
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.706952467822033
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7392064457281847
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6919529745616703
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7453633323198541
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6868349042262086
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7486064659977704
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.7034052903618121
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7423989054423836
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.7403212729299686
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.7179487179487178
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.7309972636059592
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6899260160129725
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6980085132259045
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.6808553765075505
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6815394750177359
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5351677308199047
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6019306780176346
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4326543022195196
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5387655822438432
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.6196665653187393
save: DECODE_s Best hyperparameters for breastw.npz is {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.9529238877064964
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.9559136515658255
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.9512516469038208
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.9568257829127395
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.9466149792236749
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.9341238471673254
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.9503141785750481
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.9278656126482213
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.9208726056552143
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.9217594000202696
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.8566686936252155
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.9184402553967771
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.9020472281341848
save: GMM Best hyperparameters for breastw.npz is {'n_components': 5}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.3959410155062329
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.37478463565420084
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.4088375392723219
save: COF Best hyperparameters for breastw.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.9691142191142191
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.9689621972230669
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.9691395560960779
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.9696969696969697
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.9702037093341441
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.97048241613459
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.9708117968987534
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.971039829735482
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.9711411776629167
save: kNN Best hyperparameters for breastw.npz is {'method': 'mean', 'n_neighbors': 29}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.9697223066788283
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.9682400932400932
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.9694689368602412
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.9700010134792744
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.9706977804803892
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.9721039829735482
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.9718759501368198
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.9723320158102766
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.9719646295733252
save: kth-NN Best hyperparameters for breastw.npz is {'method': 'largest', 'n_neighbors': 26}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9868754433971825
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9818333840072971
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9763859329076721
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9752711057058883
save: IF Best hyperparameters for breastw.npz is {'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.3653339414208979
save: ensemble-LOF Best hyperparameters for breastw.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.438887199756765
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.36310428701733044
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.36520725651160435
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.42193675889328064
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.4489459815546772
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.4738775717036586
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.47410560454038714
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.49227222053309005
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.509805411979325
save: LOF Best hyperparameters for breastw.npz is {'n_neighbors': 29}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.9879395966352488
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.9812506334245464
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.9781341846559238
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.9690635451505017
save: MCD Best hyperparameters for breastw.npz is {'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.9117006182223575
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.9609810479375697
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.9751697577784534
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.9783115435289349
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.9792236748758487
save: OCSVM Best hyperparameters for breastw.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.6058072362420188
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.6058072362420188
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.946868349042262
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.9486166007905139
save: PCA Best hyperparameters for breastw.npz is {'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.9338324718759501
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.93126076821729
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.9242044187696362
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.914006283571501
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.9484645788993615
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.9517583865409953
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.9361001317523057
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.943878585182933
save: SOD Best hyperparameters for breastw.npz is {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9854312354312355
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9824414715719063
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9783622174926522
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9771967163271512
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.9812759704064052
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9788942941116855
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9760312151616499
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9762592479983785
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.979299685821425
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.9770700314178575
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.9752204317421708
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.9761579000709435
save: EIF Best hyperparameters for breastw.npz is {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.4875975473801561
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.5006460930373975
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.49911320563494477
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.5075124151211108
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.5165323806628155
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.5331281037802778
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.5353957636566331
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.527832674571805
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.5296949427384209
save: ODIN Best hyperparameters for breastw.npz is {'n_neighbors': 23}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.9686074794770447
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.9764619438532482
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.9753724536333233
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.9669099016925103
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.9757525083612041
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.9720026350461133
save: LUNAR Best hyperparameters for breastw.npz is {'n_neighbours': 10}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.9792743488395662
save: DynamicHBOS Best hyperparameters for breastw.npz is {}
load again: DynamicHBOS Best hyperparameters for breastw.npz is {}
______breastw.npz______test_______
-DECODE
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 5}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 29}
-kth-NN
{'method': 'largest', 'n_neighbors': 26}
-IF
{'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 29}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.9}
-SOD
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 23}
-LUNAR
{'n_neighbours': 10}
-DynamicHBOS
{
}
______pima.npz______train_______
dataset_down_contamination {0.1: 0.006853070175438569, 0.2: 0.03523284313725489, 0.3: 0.02060688405797101, 0.4: 0.010196118349619976, 0.5: 0.0, 0.6: 0.0011322463768115854}
histogram_distances {0.1: 0.39006902305034574, 0.2: 0.24067616271178582, 0.3: 0.13411332520516334, 0.4: 0.11490842020706397, 0.5: 0.19351452153804743, 0.6: 0.08517850092800852}
Best downsample rate: 0.6
Contamination rate difference: 0.0011322463768115854
Histogram distance: 0.08517850092800852
Best downsample rate: 0.6
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5153958333333334
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5204583333333334
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5078125
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5081666666666667
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.49274999999999997
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4835
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4818958333333333
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.47835416666666675
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4962291666666666
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.48608333333333337
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for pima.npz is {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.51365625
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5217708333333333
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5401458333333333
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5487916666666668
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5617916666666667
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5589166666666666
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5621041666666666
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5819791666666667
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.544
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5706875
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5259166666666666
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5551041666666666
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5217604166666667
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5484583333333334
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5114375
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.538875
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.46682291666666664
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5135000000000001
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.47034375
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5180833333333333
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5356875
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5356875
save: DECODE_s Best hyperparameters for pima.npz is {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.6794583333333334
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.58175
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.5521875
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.5623750000000001
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.5582291666666668
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.5513541666666667
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.5668958333333334
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.5488958333333334
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.595
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.5486666666666667
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.6031666666666666
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.5777083333333333
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.5632291666666667
save: GMM Best hyperparameters for pima.npz is {'n_components': 2}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.5822916666666667
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.6080833333333333
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.6329375000000002
save: COF Best hyperparameters for pima.npz is {'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.6914374999999999
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.690375
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.6910625
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.6919583333333332
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.6933333333333332
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.6937500000000001
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.6947916666666667
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.6953541666666667
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.6963333333333332
save: kNN Best hyperparameters for pima.npz is {'method': 'mean', 'n_neighbors': 29}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.6893229166666667
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.68875
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.6931041666666667
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.6923020833333333
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.696125
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.6970833333333333
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.6991458333333332
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.6982916666666668
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.6974166666666666
save: kth-NN Best hyperparameters for pima.npz is {'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.67275
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6655
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6618541666666666
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.6543333333333332
save: IF Best hyperparameters for pima.npz is {'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.5996458333333334
save: ensemble-LOF Best hyperparameters for pima.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.5588854166666667
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.5812291666666667
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.5894583333333333
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.5928958333333333
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.6020208333333333
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.6194166666666666
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.6279166666666667
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.6338958333333333
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.6379791666666667
save: LOF Best hyperparameters for pima.npz is {'n_neighbors': 29}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.6539999999999999
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.6540833333333333
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.6508749999999999
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.6500208333333335
save: MCD Best hyperparameters for pima.npz is {'assume_centered': True, 'support_fraction': 0.7}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.5873124999999999
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.5985416666666666
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.6099166666666667
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.6240833333333333
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.6378125
save: OCSVM Best hyperparameters for pima.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.5241874999999999
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.5618749999999999
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.5960624999999999
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.6203333333333333
save: PCA Best hyperparameters for pima.npz is {'n_components': 0.9}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.588375
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.5685416666666666
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.55259375
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.5418125
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.5895
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.5954583333333334
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.5734583333333332
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.5593020833333333
save: SOD Best hyperparameters for pima.npz is {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.6799999999999999
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6753541666666667
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6662916666666666
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.6668750000000001
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.6756458333333333
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6678958333333334
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6654791666666666
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.669
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.6620625
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.6622708333333334
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.6638958333333334
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.66175
save: EIF Best hyperparameters for pima.npz is {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.5217083333333334
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.5336875000000001
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.5431041666666666
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.5487708333333333
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.5541666666666667
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.5720833333333334
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.5823437499999999
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.5905104166666666
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.5892604166666667
save: ODIN Best hyperparameters for pima.npz is {'n_neighbors': 26}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.6715208333333333
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.6939166666666667
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.6888333333333334
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.6817916666666668
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.6248333333333334
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.6807708333333333
save: LUNAR Best hyperparameters for pima.npz is {'n_neighbours': 10}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.6252291666666666
save: DynamicHBOS Best hyperparameters for pima.npz is {}
load again: DynamicHBOS Best hyperparameters for pima.npz is {}
______pima.npz______test_______
-DECODE
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
-GMM
{'n_components': 2}
-COF
{'n_neighbors': 30}
-kNN
{'method': 'mean', 'n_neighbors': 29}
-kth-NN
{'method': 'largest', 'n_neighbors': 23}
-IF
{'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 29}
-MCD
{'assume_centered': True, 'support_fraction': 0.7}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
-PCA
{'n_components': 0.9}
-SOD
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 26}
-LUNAR
{'n_neighbours': 10}
-DynamicHBOS
{
}
______yeast.npz______train_______
dataset_down_contamination {0.1: 0.010563123770670924, 0.2: 0.006328768121220962, 0.3: 0.02464792997970866, 0.4: 0.02292582373876717, 0.5: 0.0074123989218328745, 0.6: 0.01130712620006663}
histogram_distances {0.1: 0.31762692642822765, 0.2: 0.15454063299145457, 0.3: 0.23340256582212443, 0.4: 0.09193703213611408, 0.5: 0.08111141761537832, 0.6: 0.07089951215830306}
Best downsample rate: 0.6
Contamination rate difference: 0.01130712620006663
Histogram distance: 0.07089951215830306
Best downsample rate: 0.6
-DECODE
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4962790485321645
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.40947872437565624
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5195806510523673
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5474706661187966
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5494909373145231
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5392982696434279
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5371981007167967
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.537315093822764
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5081752499657581
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.47982582294662834
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5044229101036387
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
save: DECODE Best hyperparameters for yeast.npz is {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4965986394557823
{'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.8, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.49225562708304793
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4554741359631101
{'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.2, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5047482080080354
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4863146600922249
{'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.08, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.49344267908505685
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.4998287905766333
{'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.02, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.4906405515226225
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.49416746564397573
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.4930032415650824
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5010557914440944
{'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5116079989042597
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5059580879331598
{'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0008, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5116479477697118
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5135455188786924
{'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 0.0002, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.5080354289366754
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5172522028945806
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.49403049810528243
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.46122391909784044
{'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 2e-05, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.4263428525772725
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-06, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.4423423731908871
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 0}, ROC/AUC: 0.5
{'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}
DECODE_s, {'lr': 8e-07, 'mom_score': 0.25, 'win_size': 1}, ROC/AUC: 0.4423423731908871
save: DECODE_s Best hyperparameters for yeast.npz is {'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 2}
GMM, {'n_components': 2}, ROC/AUC: 0.40177715381454593
{'n_components': 3}
GMM, {'n_components': 3}, ROC/AUC: 0.4043567091266037
{'n_components': 4}
GMM, {'n_components': 4}, ROC/AUC: 0.43591631283385834
{'n_components': 5}
GMM, {'n_components': 5}, ROC/AUC: 0.4344382048121262
{'n_components': 6}
GMM, {'n_components': 6}, ROC/AUC: 0.43610464319956177
{'n_components': 7}
GMM, {'n_components': 7}, ROC/AUC: 0.43756563027895723
{'n_components': 8}
GMM, {'n_components': 8}, ROC/AUC: 0.43920924074327716
{'n_components': 9}
GMM, {'n_components': 9}, ROC/AUC: 0.43625302469981286
{'n_components': 10}
GMM, {'n_components': 10}, ROC/AUC: 0.4332054969638862
{'n_components': 11}
GMM, {'n_components': 11}, ROC/AUC: 0.43825046797242384
{'n_components': 12}
GMM, {'n_components': 12}, ROC/AUC: 0.4329429758480573
{'n_components': 13}
GMM, {'n_components': 13}, ROC/AUC: 0.43818198420307725
{'n_components': 14}
GMM, {'n_components': 14}, ROC/AUC: 0.4307914440944163
save: GMM Best hyperparameters for yeast.npz is {'n_components': 8}
-COF
{'n_neighbors': 10}
COF, {'n_neighbors': 10}, ROC/AUC: 0.46675683696297315
{'n_neighbors': 20}
COF, {'n_neighbors': 20}, ROC/AUC: 0.4595888691046889
{'n_neighbors': 30}
COF, {'n_neighbors': 30}, ROC/AUC: 0.45536570332831117
save: COF Best hyperparameters for yeast.npz is {'n_neighbors': 10}
-kNN
{'method': 'mean', 'n_neighbors': 5}
kNN, {'method': 'mean', 'n_neighbors': 5}, ROC/AUC: 0.405212756243437
{'method': 'mean', 'n_neighbors': 8}
kNN, {'method': 'mean', 'n_neighbors': 8}, ROC/AUC: 0.4017143770259782
{'method': 'mean', 'n_neighbors': 11}
kNN, {'method': 'mean', 'n_neighbors': 11}, ROC/AUC: 0.39864972834771495
{'method': 'mean', 'n_neighbors': 14}
kNN, {'method': 'mean', 'n_neighbors': 14}, ROC/AUC: 0.3965723873441994
{'method': 'mean', 'n_neighbors': 17}
kNN, {'method': 'mean', 'n_neighbors': 17}, ROC/AUC: 0.39476327443729164
{'method': 'mean', 'n_neighbors': 20}
kNN, {'method': 'mean', 'n_neighbors': 20}, ROC/AUC: 0.3938901063781217
{'method': 'mean', 'n_neighbors': 23}
kNN, {'method': 'mean', 'n_neighbors': 23}, ROC/AUC: 0.3933365292425695
{'method': 'mean', 'n_neighbors': 26}
kNN, {'method': 'mean', 'n_neighbors': 26}, ROC/AUC: 0.3927943660685751
{'method': 'mean', 'n_neighbors': 29}
kNN, {'method': 'mean', 'n_neighbors': 29}, ROC/AUC: 0.39236634251015845
save: kNN Best hyperparameters for yeast.npz is {'method': 'mean', 'n_neighbors': 5}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
kth-NN, {'method': 'largest', 'n_neighbors': 5}, ROC/AUC: 0.407954960507693
{'method': 'largest', 'n_neighbors': 8}
kth-NN, {'method': 'largest', 'n_neighbors': 8}, ROC/AUC: 0.39557081221750445
{'method': 'largest', 'n_neighbors': 11}
kth-NN, {'method': 'largest', 'n_neighbors': 11}, ROC/AUC: 0.3938330365703328
{'method': 'largest', 'n_neighbors': 14}
kth-NN, {'method': 'largest', 'n_neighbors': 14}, ROC/AUC: 0.39269734739533396
{'method': 'largest', 'n_neighbors': 17}
kth-NN, {'method': 'largest', 'n_neighbors': 17}, ROC/AUC: 0.3907740948728485
{'method': 'largest', 'n_neighbors': 20}
kth-NN, {'method': 'largest', 'n_neighbors': 20}, ROC/AUC: 0.39113934164269737
{'method': 'largest', 'n_neighbors': 23}
kth-NN, {'method': 'largest', 'n_neighbors': 23}, ROC/AUC: 0.39170718623019685
{'method': 'largest', 'n_neighbors': 26}
kth-NN, {'method': 'largest', 'n_neighbors': 26}, ROC/AUC: 0.38999223850614073
{'method': 'largest', 'n_neighbors': 29}
kth-NN, {'method': 'largest', 'n_neighbors': 29}, ROC/AUC: 0.3889963703602246
save: kth-NN Best hyperparameters for yeast.npz is {'method': 'largest', 'n_neighbors': 5}
-IF
{'max_samples': 128, 'n_estimators': 1000}
IF, {'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.3927715381454595
{'max_samples': 256, 'n_estimators': 1000}
IF, {'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.3923492215678218
{'max_samples': 512, 'n_estimators': 1000}
IF, {'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.3906028854494818
{'max_samples': 1024, 'n_estimators': 1000}
IF, {'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.39070561110350177
save: IF Best hyperparameters for yeast.npz is {'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
ensemble-LOF, range(5, 31, 3), ROC/AUC: 0.4489510569328403
save: ensemble-LOF Best hyperparameters for yeast.npz is range(5, 31, 3)
-LOF
{'n_neighbors': 5}
LOF, {'n_neighbors': 5}, ROC/AUC: 0.4747180751495229
{'n_neighbors': 8}
LOF, {'n_neighbors': 8}, ROC/AUC: 0.4623795827055654
{'n_neighbors': 11}
LOF, {'n_neighbors': 11}, ROC/AUC: 0.4489225220289458
{'n_neighbors': 14}
LOF, {'n_neighbors': 14}, ROC/AUC: 0.4484602565858558
{'n_neighbors': 17}
LOF, {'n_neighbors': 17}, ROC/AUC: 0.43977423184038716
{'n_neighbors': 20}
LOF, {'n_neighbors': 20}, ROC/AUC: 0.43789092818335384
{'n_neighbors': 23}
LOF, {'n_neighbors': 23}, ROC/AUC: 0.4375827512212939
{'n_neighbors': 26}
LOF, {'n_neighbors': 26}, ROC/AUC: 0.43527142400584395
{'n_neighbors': 29}
LOF, {'n_neighbors': 29}, ROC/AUC: 0.43555677304478835
save: LOF Best hyperparameters for yeast.npz is {'n_neighbors': 5}
-MCD
{'assume_centered': True, 'support_fraction': 0.6}
MCD, {'assume_centered': True, 'support_fraction': 0.6}, ROC/AUC: 0.3777222298315299
{'assume_centered': True, 'support_fraction': 0.7}
MCD, {'assume_centered': True, 'support_fraction': 0.7}, ROC/AUC: 0.37797333698580104
{'assume_centered': True, 'support_fraction': 0.8}
MCD, {'assume_centered': True, 'support_fraction': 0.8}, ROC/AUC: 0.37728849929233443
{'assume_centered': True, 'support_fraction': 0.9}
MCD, {'assume_centered': True, 'support_fraction': 0.9}, ROC/AUC: 0.3772656713692188
save: MCD Best hyperparameters for yeast.npz is {'assume_centered': True, 'support_fraction': 0.7}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}, ROC/AUC: 0.42198557275259096
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.6}, ROC/AUC: 0.4130826827375246
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.7}, ROC/AUC: 0.40556658905172804
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.8}, ROC/AUC: 0.4002648039081404
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}
OCSVM, {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.9}, ROC/AUC: 0.39462630689859846
save: OCSVM Best hyperparameters for yeast.npz is {'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
-PCA
{'n_components': 0.3}
PCA, {'n_components': 0.3}, ROC/AUC: 0.4158562753960645
{'n_components': 0.5}
PCA, {'n_components': 0.5}, ROC/AUC: 0.3957391681504817
{'n_components': 0.7}
PCA, {'n_components': 0.7}, ROC/AUC: 0.4013662511984659
{'n_components': 0.9}
PCA, {'n_components': 0.9}, ROC/AUC: 0.41013217367483906
save: PCA Best hyperparameters for yeast.npz is {'n_components': 0.3}
-SOD
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.4501352554444597
{'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.48386351184769216
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.46154921700223717
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.5079184358307082
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 10}, ROC/AUC: 0.4385900333287678
{'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 20, 'ref_set': 18}, ROC/AUC: 0.46501335433502256
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 10}, ROC/AUC: 0.45630735515682785
{'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}
SOD, {'alpha': 0.9, 'n_neighbors': 30, 'ref_set': 18}, ROC/AUC: 0.47009256722823356
save: SOD Best hyperparameters for yeast.npz is {'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.38531822124823084
{'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.3869218828470986
{'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.38841711181116745
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.3921494772405607
{'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.3860030589416975
{'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.3910194950463407
{'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.37995936629685434
{'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 2, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.3900493083139296
{'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 128, 'n_estimators': 1000}, ROC/AUC: 0.38369743870702644
{'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 256, 'n_estimators': 1000}, ROC/AUC: 0.3841368762270008
{'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 512, 'n_estimators': 1000}, ROC/AUC: 0.3884513536958408
{'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}
EIF, {'extension_level': 3, 'max_samples': 1024, 'n_estimators': 1000}, ROC/AUC: 0.38614573346116976
save: EIF Best hyperparameters for yeast.npz is {'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
ODIN, {'n_neighbors': 5}, ROC/AUC: 0.4686743825046797
{'n_neighbors': 8}
ODIN, {'n_neighbors': 8}, ROC/AUC: 0.4668024928092042
{'n_neighbors': 11}
ODIN, {'n_neighbors': 11}, ROC/AUC: 0.4539703465278729
{'n_neighbors': 14}
ODIN, {'n_neighbors': 14}, ROC/AUC: 0.4487513126055791
{'n_neighbors': 17}
ODIN, {'n_neighbors': 17}, ROC/AUC: 0.4509627676573985
{'n_neighbors': 20}
ODIN, {'n_neighbors': 20}, ROC/AUC: 0.4504348719353513
{'n_neighbors': 23}
ODIN, {'n_neighbors': 23}, ROC/AUC: 0.4483061681048258
{'n_neighbors': 26}
ODIN, {'n_neighbors': 26}, ROC/AUC: 0.44767269323836917
{'n_neighbors': 29}
ODIN, {'n_neighbors': 29}, ROC/AUC: 0.4457665616582204
save: ODIN Best hyperparameters for yeast.npz is {'n_neighbors': 5}
-LUNAR
{'n_neighbours': 5}
LUNAR, {'n_neighbours': 5}, ROC/AUC: 0.39628703830525497
{'n_neighbours': 10}
LUNAR, {'n_neighbours': 10}, ROC/AUC: 0.3951513491302561
{'n_neighbours': 15}
LUNAR, {'n_neighbours': 15}, ROC/AUC: 0.4183159841117655
{'n_neighbours': 20}
LUNAR, {'n_neighbours': 20}, ROC/AUC: 0.39630415924759166
{'n_neighbours': 25}
LUNAR, {'n_neighbours': 25}, ROC/AUC: 0.3912021184312652
{'n_neighbours': 30}
LUNAR, {'n_neighbours': 30}, ROC/AUC: 0.43626443866137055
save: LUNAR Best hyperparameters for yeast.npz is {'n_neighbours': 30}
-DynamicHBOS
{}
DynamicHBOS, {}, ROC/AUC: 0.43132219330685295
save: DynamicHBOS Best hyperparameters for yeast.npz is {}
load again: DynamicHBOS Best hyperparameters for yeast.npz is {}
______yeast.npz______test_______
-DECODE
{'lr': 0.008, 'mom_score': 0.25, 'win_size': 0}
-DECODE_s
{'lr': 8e-05, 'mom_score': 0.25, 'win_size': 0}
-GMM
{'n_components': 8}
-COF
{'n_neighbors': 10}
-kNN
{'method': 'mean', 'n_neighbors': 5}
-kth-NN
{'method': 'largest', 'n_neighbors': 5}
-IF
{'max_samples': 128, 'n_estimators': 1000}
-ensemble-LOF
range(5, 31, 3)
-LOF
{'n_neighbors': 5}
-MCD
{'assume_centered': True, 'support_fraction': 0.7}
-OCSVM
{'gamma': 'auto', 'kernel': 'rbf', 'nu': 0.5}
-PCA
{'n_components': 0.3}
-SOD
{'alpha': 0.7, 'n_neighbors': 30, 'ref_set': 18}
-EIF
{'extension_level': 1, 'max_samples': 1024, 'n_estimators': 1000}
-ODIN
{'n_neighbors': 5}
-LUNAR
{'n_neighbours': 30}
-DynamicHBOS
{
}
Executing runs/run_benchmark_hpt.py with dataset path 'datasets/benchmark' and result path 'results/benchmark/hpt'...
